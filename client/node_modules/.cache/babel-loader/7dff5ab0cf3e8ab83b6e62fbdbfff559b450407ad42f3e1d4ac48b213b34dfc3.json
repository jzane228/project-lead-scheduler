{"ast":null,"code":"import _objectSpread from\"/Users/jordanzane/Documents/Project Lead Scheduler/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState}from'react';import{XMarkIcon,PlusCircleIcon,EyeIcon,EyeSlashIcon,TrashIcon}from'@heroicons/react/24/outline';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ColumnManagerModal=_ref=>{let{customColumns,onUpdateColumn,onRemoveColumn,onToggleVisibility,onAddColumn,onClose}=_ref;const[editingColumn,setEditingColumn]=useState(null);const[editForm,setEditForm]=useState({name:'',prompt:''});const handleEdit=column=>{setEditingColumn(column.id);setEditForm({name:column.name,prompt:column.prompt});};const handleSave=columnId=>{onUpdateColumn(columnId,'name',editForm.name);onUpdateColumn(columnId,'prompt',editForm.prompt);setEditingColumn(null);setEditForm({name:'',prompt:''});};const handleCancel=()=>{setEditingColumn(null);setEditForm({name:'',prompt:''});};return/*#__PURE__*/_jsx(\"div\",{className:\"fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full z-50\",children:/*#__PURE__*/_jsx(\"div\",{className:\"relative top-20 mx-auto p-5 border w-4xl max-w-4xl shadow-lg rounded-md bg-white\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"mt-3\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between mb-6\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-medium text-gray-900\",children:\"Manage Custom Columns\"}),/*#__PURE__*/_jsx(\"button\",{onClick:onClose,className:\"text-gray-400 hover:text-gray-600\",children:/*#__PURE__*/_jsx(XMarkIcon,{className:\"h-6 w-6\"})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-6\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-600 mb-4\",children:\"Custom columns allow you to extract specific data from leads using AI prompts. These prompts will guide the AI to find and populate the specified information.\"}),/*#__PURE__*/_jsxs(\"button\",{onClick:onAddColumn,className:\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\",children:[/*#__PURE__*/_jsx(PlusCircleIcon,{className:\"h-4 w-4 mr-2\"}),\"Add New Column\"]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"space-y-4\",children:customColumns.map(column=>/*#__PURE__*/_jsxs(\"div\",{className:\"border border-gray-200 rounded-lg p-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between mb-3\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-3\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>onToggleVisibility(column.id),className:\"text-gray-400 hover:text-gray-600\",title:column.visible?'Hide Column':'Show Column',children:column.visible?/*#__PURE__*/_jsx(EyeIcon,{className:\"h-5 w-5\"}):/*#__PURE__*/_jsx(EyeSlashIcon,{className:\"h-5 w-5\"})}),editingColumn===column.id?/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-2\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:editForm.name,onChange:e=>setEditForm(prev=>_objectSpread(_objectSpread({},prev),{},{name:e.target.value})),placeholder:\"Column Name\",className:\"px-3 py-1 border border-gray-300 rounded-md text-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleSave(column.id),className:\"px-3 py-1 text-sm font-medium text-white bg-green-600 rounded-md hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500\",children:\"Save\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleCancel,className:\"px-3 py-1 text-sm font-medium text-gray-700 bg-gray-100 rounded-md hover:bg-gray-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-500\",children:\"Cancel\"})]}):/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-2\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-sm font-medium text-gray-900\",children:column.name}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleEdit(column),className:\"text-indigo-600 hover:text-indigo-900 text-sm\",children:\"Edit\"})]})]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>onRemoveColumn(column.id),className:\"text-red-600 hover:text-red-900\",title:\"Remove Column\",children:/*#__PURE__*/_jsx(TrashIcon,{className:\"h-5 w-5\"})})]}),editingColumn===column.id?/*#__PURE__*/_jsx(\"textarea\",{value:editForm.prompt,onChange:e=>setEditForm(prev=>_objectSpread(_objectSpread({},prev),{},{prompt:e.target.value})),placeholder:\"AI Prompt for data extraction...\",rows:3,className:\"w-full px-3 py-2 border border-gray-300 rounded-md text-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500\"}):/*#__PURE__*/_jsxs(\"div\",{className:\"text-sm text-gray-600\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"AI Prompt:\"}),\" \",column.prompt]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-2 text-xs text-gray-500\",children:[\"Status: \",column.visible?'Visible':'Hidden',\" \\u2022 ID: \",column.id]})]},column.id))}),customColumns.length===0&&/*#__PURE__*/_jsxs(\"div\",{className:\"text-center py-8 text-gray-500\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"No custom columns defined yet.\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm\",children:\"Click \\\"Add New Column\\\" to get started.\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"mt-6 flex justify-end\",children:/*#__PURE__*/_jsx(\"button\",{onClick:onClose,className:\"px-4 py-2 border border-gray-300 rounded-md text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\",children:\"Close\"})})]})})});};export default ColumnManagerModal;","map":{"version":3,"names":["React","useState","XMarkIcon","PlusCircleIcon","EyeIcon","EyeSlashIcon","TrashIcon","jsx","_jsx","jsxs","_jsxs","ColumnManagerModal","_ref","customColumns","onUpdateColumn","onRemoveColumn","onToggleVisibility","onAddColumn","onClose","editingColumn","setEditingColumn","editForm","setEditForm","name","prompt","handleEdit","column","id","handleSave","columnId","handleCancel","className","children","onClick","map","title","visible","type","value","onChange","e","prev","_objectSpread","target","placeholder","rows","length"],"sources":["/Users/jordanzane/Documents/Project Lead Scheduler/client/src/components/Leads/ColumnManagerModal.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { XMarkIcon, PlusCircleIcon, EyeIcon, EyeSlashIcon, TrashIcon } from '@heroicons/react/24/outline';\n\nconst ColumnManagerModal = ({ \n  customColumns, \n  onUpdateColumn, \n  onRemoveColumn, \n  onToggleVisibility, \n  onAddColumn, \n  onClose \n}) => {\n  const [editingColumn, setEditingColumn] = useState(null);\n  const [editForm, setEditForm] = useState({ name: '', prompt: '' });\n\n  const handleEdit = (column) => {\n    setEditingColumn(column.id);\n    setEditForm({ name: column.name, prompt: column.prompt });\n  };\n\n  const handleSave = (columnId) => {\n    onUpdateColumn(columnId, 'name', editForm.name);\n    onUpdateColumn(columnId, 'prompt', editForm.prompt);\n    setEditingColumn(null);\n    setEditForm({ name: '', prompt: '' });\n  };\n\n  const handleCancel = () => {\n    setEditingColumn(null);\n    setEditForm({ name: '', prompt: '' });\n  };\n\n  return (\n    <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full z-50\">\n      <div className=\"relative top-20 mx-auto p-5 border w-4xl max-w-4xl shadow-lg rounded-md bg-white\">\n        <div className=\"mt-3\">\n          <div className=\"flex items-center justify-between mb-6\">\n            <h3 className=\"text-lg font-medium text-gray-900\">Manage Custom Columns</h3>\n            <button\n              onClick={onClose}\n              className=\"text-gray-400 hover:text-gray-600\"\n            >\n              <XMarkIcon className=\"h-6 w-6\" />\n            </button>\n          </div>\n\n          <div className=\"mb-6\">\n            <p className=\"text-sm text-gray-600 mb-4\">\n              Custom columns allow you to extract specific data from leads using AI prompts. \n              These prompts will guide the AI to find and populate the specified information.\n            </p>\n            \n            <button\n              onClick={onAddColumn}\n              className=\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n            >\n              <PlusCircleIcon className=\"h-4 w-4 mr-2\" />\n              Add New Column\n            </button>\n          </div>\n\n          <div className=\"space-y-4\">\n            {customColumns.map((column) => (\n              <div key={column.id} className=\"border border-gray-200 rounded-lg p-4\">\n                <div className=\"flex items-center justify-between mb-3\">\n                  <div className=\"flex items-center space-x-3\">\n                    <button\n                      onClick={() => onToggleVisibility(column.id)}\n                      className=\"text-gray-400 hover:text-gray-600\"\n                      title={column.visible ? 'Hide Column' : 'Show Column'}\n                    >\n                      {column.visible ? (\n                        <EyeIcon className=\"h-5 w-5\" />\n                      ) : (\n                        <EyeSlashIcon className=\"h-5 w-5\" />\n                      )}\n                    </button>\n                    \n                    {editingColumn === column.id ? (\n                      <div className=\"flex items-center space-x-2\">\n                        <input\n                          type=\"text\"\n                          value={editForm.name}\n                          onChange={(e) => setEditForm(prev => ({ ...prev, name: e.target.value }))}\n                          placeholder=\"Column Name\"\n                          className=\"px-3 py-1 border border-gray-300 rounded-md text-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500\"\n                        />\n                        <button\n                          onClick={() => handleSave(column.id)}\n                          className=\"px-3 py-1 text-sm font-medium text-white bg-green-600 rounded-md hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500\"\n                        >\n                          Save\n                        </button>\n                        <button\n                          onClick={handleCancel}\n                          className=\"px-3 py-1 text-sm font-medium text-gray-700 bg-gray-100 rounded-md hover:bg-gray-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-500\"\n                        >\n                          Cancel\n                        </button>\n                      </div>\n                    ) : (\n                      <div className=\"flex items-center space-x-2\">\n                        <span className=\"text-sm font-medium text-gray-900\">{column.name}</span>\n                        <button\n                          onClick={() => handleEdit(column)}\n                          className=\"text-indigo-600 hover:text-indigo-900 text-sm\"\n                        >\n                          Edit\n                        </button>\n                      </div>\n                    )}\n                  </div>\n                  \n                  <button\n                    onClick={() => onRemoveColumn(column.id)}\n                    className=\"text-red-600 hover:text-red-900\"\n                    title=\"Remove Column\"\n                  >\n                    <TrashIcon className=\"h-5 w-5\" />\n                  </button>\n                </div>\n\n                {editingColumn === column.id ? (\n                  <textarea\n                    value={editForm.prompt}\n                    onChange={(e) => setEditForm(prev => ({ ...prev, prompt: e.target.value }))}\n                    placeholder=\"AI Prompt for data extraction...\"\n                    rows={3}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md text-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500\"\n                  />\n                ) : (\n                  <div className=\"text-sm text-gray-600\">\n                    <strong>AI Prompt:</strong> {column.prompt}\n                  </div>\n                )}\n\n                <div className=\"mt-2 text-xs text-gray-500\">\n                  Status: {column.visible ? 'Visible' : 'Hidden'} • \n                  ID: {column.id}\n                </div>\n              </div>\n            ))}\n          </div>\n\n          {customColumns.length === 0 && (\n            <div className=\"text-center py-8 text-gray-500\">\n              <p>No custom columns defined yet.</p>\n              <p className=\"text-sm\">Click \"Add New Column\" to get started.</p>\n            </div>\n          )}\n\n          <div className=\"mt-6 flex justify-end\">\n            <button\n              onClick={onClose}\n              className=\"px-4 py-2 border border-gray-300 rounded-md text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n            >\n              Close\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ColumnManagerModal;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}